#!/bin/bash

BUILD_DIR=$1
CACHE_DIR=$2

echo "-----> Installing Bun"

# Choose a directory to store the bun binary
BUN_DIR_NAME=".scalingo/bun"
BUN_DIR="$BUILD_DIR/$BUN_DIR_NAME"

# Make sure the directory exists
mkdir -p $BUN_DIR

# Define the version and distribution of Bun to download
BUN_VERSION="1.0.8"
BUN_DISTRO="linux-x64"
BUN_BINARY="bun-${BUN_DISTRO}"

BUN_URL="https://github.com/oven-sh/bun/releases/download/bun-v${BUN_VERSION}/${BUN_BINARY}.zip"

# Download Bun
curl -fsSL $BUN_URL -o bun.zip

# If the download failed, exit with an error
if [ ! -f bun.zip ]; then
    echo "Failed to download Bun. Please check the provided URL."
    exit 1
fi

# Unzip Bun and make it executable
unzip -qo bun.zip -d $BUN_DIR
chmod +x $BUN_DIR/${BUN_BINARY}/bun

# Cleanup the zip file
rm bun.zip

# Install the bunx wrapper script
mkdir -p $BUILD_DIR/.bin
BUNX_PATH="$(dirname "$0")/../scripts/bunx"
cp $BUNX_PATH $BUILD_DIR/.bin/bunx
chmod +x $BUILD_DIR/.bin/bunx

# Add Bun to the PATH
export PATH="$PATH:$BUN_DIR/${BUN_BINARY}"
export PATH="$PATH:$BUILD_DIR/.bin"

# Persist the PATH change for the runtime environment
test ! -d ".profile.d" && mkdir -p .profile.d || true
echo "export PATH=\"\$HOME/$BUN_DIR_NAME/${BUN_BINARY}:\$PATH\"" > .profile.d/bun.sh
echo "export PATH=\"\$HOME/.bin:\$PATH\"" >> .profile.d/bun.sh

# Add the node_modules/.bin directory to the PATH for both build and runtime environments
NODE_BIN_PATH="$BUILD_DIR/node_modules/.bin"
export PATH="$PATH:$NODE_BIN_PATH"
echo "export PATH=\"\$HOME/node_modules/.bin:\$PATH\"" >> .profile.d/bun.sh

# Make the profile script executable
chmod +x .profile.d/bun.sh

echo "-----> Bun installed"
echo "       Bun version: $(bun --version)"

# Here you would use bun to build your application
echo "-----> Building application with Bun"

cd $BUILD_DIR
bun install
bun run build

# At this point, your node_modules/.bin directory should be populated.
# Verify that the executables are present.
if [ -d "$NODE_BIN_PATH" ]; then
    echo "-----> Executables in node_modules/.bin are now available"
    ls -l "$NODE_BIN_PATH"
else
    echo "-----> Warning: node_modules/.bin directory not found"
fi

# Clean up the cache to prevent storing unnecessary files
rm -rf $CACHE_DIR/*

# Copy bun into the cache directory for future builds
cp -R $BUN_DIR $CACHE_DIR

echo "-----> Application built with Bun"
