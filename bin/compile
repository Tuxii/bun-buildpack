#!/bin/sh

BUILD_DIR=$1
CACHE_DIR=$2

echo "-----> Installing Bun"

# Choose a directory to store the bun binary
BUN_DIR="$BUILD_DIR/.scalingo/bun"

# Make sure the directory exists
mkdir -p $BUN_DIR

# Define the version and distribution of Bun to download
BUN_VERSION="1.0.8"
BUN_DISTRO="linux-x64"
BUN_BINARY="bun-${BUN_DISTRO}"

BUN_URL="https://github.com/oven-sh/bun/releases/download/bun-v${BUN_VERSION}/${BUN_BINARY}.zip"

# Download Bun
curl -fsSL $BUN_URL -o bun.zip

# If the download failed, exit with an error
if [ ! -f bun.zip ]; then
    echo "Failed to download Bun. Please check the provided URL."
    exit 1
fi

# Unzip Bun and make it executable
unzip -qo bun.zip -d $BUN_DIR
chmod +x $BUN_DIR/${BUN_BINARY}/bun

# Cleanup the zip file
rm bun.zip

# Add Bun to the PATH for subsequent build steps
export PATH="$BUN_DIR/${BUN_BINARY}:$PATH"

# Persist the PATH change for the runtime environment
mkdir -p $BUILD_DIR/.profile.d
echo "export PATH=\"\$PATH:$BUN_DIR/${BUN_BINARY}\"" > $BUILD_DIR/.profile.d/bun.sh
echo 'alias bunx="bun x"' >> $BUILD_DIR/.profile.d/bun.sh
echo 'source $BUILD_DIR/.profile.d/bun.sh' >> $BUILD_DIR/.profile

ls $BUN_DIR/${BUN_BINARY}

cat $BUILD_DIR/.profile.d/bun.sh

echo "-----> Bun installed"
echo "       Bun version: $(bun --version)"

# Here you would use bun to build your application
echo "-----> Building application with Bun"

cd $BUILD_DIR
bun install
bun run build

# Clean up the cache to prevent storing unnecessary files
rm -rf $CACHE_DIR/*

# Copy bun into the cache directory for future builds
cp -R $BUN_DIR $CACHE_DIR

# Make the profile script executable
chmod +x $BUILD_DIR/.profile.d/bun.sh

echo "-----> Application built with Bun"
